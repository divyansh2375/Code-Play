1st simple code on repl it -
const express = require('express');

const app = express();


const productCallback = (req,res) =>{
res.send("product will listed here")  
}
  


app.get('/', (req, res) => {
  res.send('Hello Express app!')
});

app.get('/products', (req, res) => {
  res.send('Hello products listed here')
});

app.get('/products',  productCallback);

app.listen(3000, () => {
  console.log('server started');
});


--------------------------------------------------------------------------------------------------------


2nd more advanced than before ;
const express = require('express');

const app = express();

const database = {
 products: [
  {
    name: "ball",
    price : 25
  },
    
  {
    name: "pen",
    price : 10
  },
    
  {
    name: "lunchbox",
    price : 25
  }
    
  ]
};

const productCallback = (req,res) =>{
  const productPage = database.products.map((product) => 
 ` <li>${product.name}</li> `).join(`\n`)
res.send(productPage)  
}
  


app.get('/', (req, res) => {
  res.send('Hello Express app!')
});



app.get('/products',  productCallback);

app.listen(3000, () => {
  console.log('server started');
});


--------------------------------------------------------------------------------------------------------




3rd for more practise --
const express = require('express');

const app = express();

const database = {
 products: [
  {
    name: "ball",
    price : 25
  },
    
  {
    name: "pen",
    price : 10
  },
    
  {
    name: "lunchbox",
    price : 25
  }
    
  ]
};
const cartItems = {
  carts:[
    {
    name: "mouse",
    cost: "30rs"
    },
    {
    name: "keyboard",
    cost: "30rs"
    },
    {
    name: "phone",
    cost: "30rs"
    },
        ]
}
const cartService = (req,res) =>{
  const servicepage = cartItems.carts.map((cart) => 
    `<li> ${cart.name} </li>`).join(`\n`)
  res.send(servicepage)
}
const productCallback = (req,res) =>{
  const productPage = database.products.map((product) => 
 ` <li>${product.name}</li> `).join(`\n`)
res.send(productPage)  
}
  


app.get('/', (req, res) => {
  res.send('Hello Express app!')
});
app.get('/carts' , cartService)


app.get('/products',  productCallback);

app.listen(3000, () => {
  console.log('server started');
});




--------------------------------------------------------------------------------------------------------




//made working with postman 
const express = require('express');

const app = express();

const database = {
 products: [
  {
    id:"123",
    name: "ball",
    price : 25
  },
    
  {
    id:"124",
    
    name: "pen",
    price : 10
  },
    
  {
    id:"125",
    
    name: "lunchbox",
    price : 25
  }
    
  ]
};




app.get('/', (req, res) => {
  res.send('Hello Express app!')
});



app.get('/products', (req,res) => {
  res.json(database.products)
});

app.get('/products/:id', (req,res) => {
  const {id} =req.params;
  const product = database.products.find(product =>   
   product.id === id)
  product ? res.json({product}) : res.status(404).json(
    {message: "no product"})
  
});

app.listen(3000, () => {
  console.log('server started');
});



--------------------------------------------------------------------------------------------------------

4.posting first practise in postman 
//for posting we need bodyparser 


const express = require('express');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.json());

const database = {
 products: [
  {
    id:"123",
    name: "ball",
    price : 25
  },
    
  {
    id:"124",
    
    name: "pen",
    price : 10
  },
    
  {
    id:"125",
    
    name: "lunchbox",
    price : 25
  }
    
  ]
};




app.get('/', (req, res) => {
  res.send('Hello Express app!')
});



app.get('/products', (req,res) => {
  res.json(database.products)
});
app.post('/products', (req,res) => {
  const { product } = req.body;
  res.json({echo: "success", product})
})

app.get('/products/:id', (req,res) => {
  const {id} =req.params;
  const product = database.products.find(product =>   
   product.id === id)
  product ? res.json({product}) : res.status(404).json(
    {message: "no product"})
  
});

app.listen(3000, () => {
  console.log('server started');
});



-----------------------------------------
6. Added products samosa with price 
//for posting we need bodyparser 


const express = require('express');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.json());

const database = {
 products: [
  {
    id:"123",
    name: "ball",
    price : 25
  },
    
  {
    id:"124",
    
    name: "pen",
    price : 10
  },
    
  {
    id:"125",
    
    name: "lunchbox",
    price : 25
  }
    
  ]
};




app.get('/', (req, res) => {
  res.send('Hello Express app!')
});



app.get('/products', (req,res) => {
  res.json(database.products)
});
app.post('/products', (req,res) => {
  const { product } = req.body;
  res.json({echo: "success", product})
})

app.get('/products/:id', (req,res) => {
  const {id} =req.params;
  const product = database.products.find(product =>   
   product.id === id)
  product ? res.json({product}) : res.status(404).json(
    {message: "no product"})
  
});

app.listen(3000, () => {
  console.log('server started');
});


---------------------------------------------------
7.pushing in database 
//for posting we need bodyparser 


const express = require('express');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.json());

const database = {
 products: [
  {
    id:"123",
    name: "ball",
    price : 25
  },
    
  {
    id:"124",
    
    name: "pen",
    price : 10
  },
    
  {
    id:"125",
    
    name: "lunchbox",
    price : 25
  }
    
  ]
};




app.get('/', (req, res) => {
  res.send('Hello Express app!')
});



app.get('/products', (req,res) => {
  res.json(database.products)
});
app.post('/products', (req,res) => {
  const { product } = req.body;
  product.id = Date.now()
  database.products.push(product)
  res.status(201).json({product})
})

app.get('/products/:id', (req,res) => {
  const {id} =req.params;
  const product = database.products.find(product =>   
   product.id === id)
  product ? res.json({product}) : res.status(404).json(
    {message: "no product"})
  
});

app.listen(3000, () => {
  console.log('server started');
});

--------------------------------------------------------------
8 updating item 
//for posting we need bodyparser 


const express = require('express');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.json());

const database = {
 products: [
  {
    id:"123",
    name: "ball",
    price : 25
  },
    
  {
    id:"124",
    
    name: "pen",
    price : 10
  },
    
  {
    id:"125",
    
    name: "lunchbox",
    price : 25
  }
    
  ]
};




app.get('/', (req, res) => {
  res.send('Hello Express app!')
});



app.get('/products', (req,res) => {
  res.json(database.products)
});
app.post('/products', (req,res) => {
  const { product } = req.body;
  product.id = Date.now()
  database.products.push(product)
  res.status(201).json({product})
})
app.post('/products/:id', (req,res) => {
  let { product } = req.body;
  const {id} = req.params;
  const currentProduct = database.products.find(product => 
    product.id === id)
  product = {...currentProduct , ...product}
  res.json({product})
})

app.get('/products/:id', (req,res) => {
  const {id} =req.params;
  const product = database.products.find(product =>   
   product.id === id)
  product ? res.json({product}) : res.status(404).json(
    {message: "no product"})
  
});

app.listen(3000, () => {
  console.log('server started');
});













